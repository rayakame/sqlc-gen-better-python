[project]
name = "sqlc-gen-better-python"
version = "0.1.0"
description = "Add your description here"
requires-python = ">=3.10.0,<3.14.0"
dependencies = [
    "aiosqlite>=0.21.0",
    "asyncpg>=0.30.0",
    "attrs>=25.3.0",
    "ciso8601>=2.3.2",
    "msgspec>=0.19.0",
]

[dependency-groups]
dev = [
    "nox>=2025.5.1",
    "pyyaml>=6.0.2",
]
dev-complete = [
    "nox>=2025.5.1",
    { include-group = "pyright"},
    { include-group = "pytest"},
    { include-group = "ruff" },
]
pyright = [
    "asyncpg-stubs>=0.30.1",
    "pyright>=1.1.400",
    { include-group = "pytest" }
]
coverage = [
    "coverage[toml]>=7.8.0",
]
pytest = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "pytest-dependency>=0.6.0",
    { include-group = "coverage" },
]
ruff = [
    "ruff>=0.11.9",
]

[tool.pyright]
pythonVersion = "3.10"
typeCheckingMode = "strict"

reportUnnecessaryTypeIgnoreComment = "error"
deprecateTypingAliases = true
reportCallInDefaultInitializer = true
reportImplicitOverride = true
reportImplicitStringConcatenation = true
reportImportCycles = true
reportPropertyTypeMismatch = true
reportShadowedImports = true
reportUninitializedInstanceVariable = true


[tool.pytest.ini_options]
required_plugins = ["pytest-asyncio", "pytest-dependency"]
asyncio_default_fixture_loop_scope = "session"

[tool.coverage.run]
relative_files = true
parallel = true
branch = true
omit = ["**/*test*.py"]


[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_lines = [
    "\\#\\s*pragma: no cover$",
    "^\\s*if typing.TYPE_CHECKING:$",
    # -------------- custom for adapters / converters ----------------
    "^\\s*def _adapt_",
    "^\\s*def _convert_",
]

