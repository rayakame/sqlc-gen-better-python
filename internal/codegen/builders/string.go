package builders

import (
	"github.com/rayakame/sqlc-gen-better-python/internal/core"
	"os"
	"strings"
)

type IndentStringBuilder struct {
	strings.Builder

	indentChar          string
	charsPerIndentLevel int
}

func NewIndentStringBuilder(indentChar string, charsPerIndentLevel int) *IndentStringBuilder {
	return &IndentStringBuilder{
		indentChar:          indentChar,
		charsPerIndentLevel: charsPerIndentLevel,
	}
}

func (b *IndentStringBuilder) WriteIndentedString(level int, txt string) int {
	count, _ := b.WriteString(strings.Repeat(b.indentChar, level*b.charsPerIndentLevel) + txt)
	return count
}

func (b *IndentStringBuilder) WriteSqlcHeader() {
	sqlcVersion := os.Getenv("SQLC_VERSION")

	b.WriteString("# Code generated by sqlc. DO NOT EDIT.\n")
	b.WriteString("# versions:\n")
	b.WriteString("#   sqlc " + sqlcVersion + "\n")
	b.WriteString("#   sqlc-gen-better-python " + core.PluginVersion + "\n")
}

func (b *IndentStringBuilder) WriteLine(txt string) {
	b.WriteString(txt)
	b.WriteString("\n")
}

func (b *IndentStringBuilder) WriteIndentedLine(level int, txt string) {
	b.WriteIndentedString(level, txt)
	b.WriteString("\n")
}

func (b *IndentStringBuilder) WriteImportAnnotations() {
	b.WriteLine("from __future__ import annotations")
	b.WriteString("\n")
}

func (b *IndentStringBuilder) NewLine() {
	b.WriteString("\n")
}

func (b *IndentStringBuilder) NNewLine(n int) {
	for range n {
		b.WriteString("\n")
	}
}
