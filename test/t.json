[
  {
    "Cmd": ":one",
    "Comments": null,
    "MethodName": "GetEmbeddedTestPostgresType",
    "FuncName": "get_embedded_test_postgres_type",
    "FieldName": "getEmbeddedTestPostgresTypeStmt",
    "ConstantName": "GET_EMBEDDED_TEST_POSTGRES_TYPE",
    "SQL": "SELECT id, serial_test, table_id, bool_test, test_inner_postgres_types.table_id, test_inner_postgres_types.bool_test, test_inner_postgres_types.bool_test\nFROM test_postgres_types\n         JOIN test_inner_postgres_types ON test_inner_postgres_types.table_id = test_postgres_types.id\n    LIMIT 1",
    "SourceName": "queries.sql",
    "Ret": {
      "Emit": true,
      "Name": "i",
      "DBName": "",
      "Table": {
        "Table": null,
        "Name": "GetEmbeddedTestPostgresTypeRow",
        "Columns": [
          {
            "Name": "id",
            "DBName": "id",
            "Type": {
              "SqlType": "pg_catalog.int4",
              "Type": "int",
              "IsList": false,
              "IsNullable": false,
              "IsEnum": false
            },
            "Comment": "",
            "Column": {
              "name": "id",
              "not_null": true,
              "length": -1,
              "table": {
                "name": "test_postgres_types"
              },
              "type": {
                "schema": "pg_catalog",
                "name": "int4"
              },
              "original_name": "id"
            },
            "EmbedFields": null
          },
          {
            "Name": "serial_test",
            "DBName": "serial_test",
            "Type": {
              "SqlType": "serial",
              "Type": "int",
              "IsList": false,
              "IsNullable": false,
              "IsEnum": false
            },
            "Comment": "",
            "Column": {
              "name": "serial_test",
              "not_null": true,
              "length": -1,
              "table": {
                "name": "test_postgres_types"
              },
              "type": {
                "name": "serial"
              },
              "original_name": "serial_test"
            },
            "EmbedFields": null
          },
          {
            "Name": "table_id",
            "DBName": "table_id",
            "Type": {
              "SqlType": "pg_catalog.int4",
              "Type": "int",
              "IsList": false,
              "IsNullable": false,
              "IsEnum": false
            },
            "Comment": "",
            "Column": {
              "name": "table_id",
              "not_null": true,
              "length": -1,
              "table": {
                "name": "test_inner_postgres_types"
              },
              "type": {
                "schema": "pg_catalog",
                "name": "int4"
              },
              "original_name": "table_id"
            },
            "EmbedFields": null
          },
          {
            "Name": "bool_test",
            "DBName": "bool_test",
            "Type": {
              "SqlType": "pg_catalog.bool",
              "Type": "bool",
              "IsList": false,
              "IsNullable": false,
              "IsEnum": false
            },
            "Comment": "",
            "Column": {
              "name": "bool_test",
              "not_null": true,
              "length": -1,
              "table": {
                "name": "test_inner_postgres_types"
              },
              "type": {
                "schema": "pg_catalog",
                "name": "bool"
              },
              "original_name": "bool_test"
            },
            "EmbedFields": null
          },
          {
            "Name": "test_inner_postgres_type",
            "DBName": "TestInnerPostgresType",
            "Type": {
              "SqlType": "TestInnerPostgresType",
              "Type": "models.TestInnerPostgresType",
              "IsList": false,
              "IsNullable": false,
              "IsEnum": false
            },
            "Comment": "",
            "Column": {
              "name": "test_inner_postgres_types",
              "length": -1,
              "type": {},
              "embed_table": {
                "name": "test_inner_postgres_types"
              }
            },
            "EmbedFields": [
              {
                "Name": "table_id",
                "DBName": "",
                "Type": {
                  "SqlType": "pg_catalog.int4",
                  "Type": "int",
                  "IsList": false,
                  "IsNullable": false,
                  "IsEnum": false
                },
                "Comment": "",
                "Column": null,
                "EmbedFields": null
              },
              {
                "Name": "bool_test",
                "DBName": "",
                "Type": {
                  "SqlType": "pg_catalog.bool",
                  "Type": "bool",
                  "IsList": false,
                  "IsNullable": false,
                  "IsEnum": false
                },
                "Comment": "",
                "Column": null,
                "EmbedFields": null
              }
            ]
          },
          {
            "Name": "bool_test",
            "DBName": "bool_test",
            "Type": {
              "SqlType": "pg_catalog.bool",
              "Type": "bool",
              "IsList": false,
              "IsNullable": false,
              "IsEnum": false
            },
            "Comment": "",
            "Column": {
              "name": "bool_test",
              "not_null": true,
              "length": -1,
              "table": {
                "name": "test_inner_postgres_types"
              },
              "type": {
                "schema": "pg_catalog",
                "name": "bool"
              },
              "original_name": "bool_test"
            },
            "EmbedFields": null
          }
        ],
        "Comment": ""
      },
      "Typ": {
        "SqlType": "",
        "Type": "",
        "IsList": false,
        "IsNullable": false,
        "IsEnum": false
      },
      "Column": null
    },
    "Args": null,
    "Table": null
  }
]
