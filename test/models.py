# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.28.0
#   sqlc-gen-better-python v0.3.0
from __future__ import annotations

__all__: typing.Sequence[str] = (
    "Author",
    "DatetimeTest",
    "Student",
    "TestInnerPostgresType",
    "TestPostgresType",
    "TestScore",
)

import datetime
import decimal
import msgspec
import typing
import uuid


class Author(msgspec.Struct):
    id: int = msgspec.field()
    name: str = msgspec.field()
    bio: typing.Optional[str] = msgspec.field()


class DatetimeTest(msgspec.Struct):
    id: int = msgspec.field()
    hi: datetime.datetime = msgspec.field()
    test: typing.Optional[str] = msgspec.field()


class Student(msgspec.Struct):
    id: int = msgspec.field()
    name: typing.Optional[str] = msgspec.field()
    age: typing.Optional[int] = msgspec.field()


class TestInnerPostgresType(msgspec.Struct):
    table_id: int = msgspec.field()
    serial_test: int = msgspec.field()
    serial4_test: int = msgspec.field()
    bigserial_test: int = msgspec.field()
    smallserial_test: int = msgspec.field()
    int_test: int = msgspec.field()
    bigint_test: int = msgspec.field()
    smallint_test: int = msgspec.field()
    float_test: float = msgspec.field()
    double_precision_test: float = msgspec.field()
    real_test: float = msgspec.field()
    numeric_test: decimal.Decimal = msgspec.field()
    money_test: str = msgspec.field()
    bool_test: bool = msgspec.field()
    json_test: str = msgspec.field()
    jsonb_test: str = msgspec.field()
    bytea_test: memoryview = msgspec.field()
    date_test: datetime.date = msgspec.field()
    time_test: datetime.time = msgspec.field()
    timetz_test: datetime.time = msgspec.field()
    timestamp_test: datetime.datetime = msgspec.field()
    timestamptz_test: datetime.datetime = msgspec.field()
    interval_test: datetime.timedelta = msgspec.field()
    text_test: str = msgspec.field()
    varchar_test: str = msgspec.field()
    bpchar_test: str = msgspec.field()
    char_test: str = msgspec.field()
    citext_test: str = msgspec.field()
    uuid_test: uuid.UUID = msgspec.field()
    inet_test: str = msgspec.field()
    cidr_test: str = msgspec.field()
    macaddr_test: str = msgspec.field()
    macaddr8_test: str = msgspec.field()
    ltree_test: str = msgspec.field()
    lquery_test: str = msgspec.field()
    ltxtquery_test: str = msgspec.field()


class TestPostgresType(msgspec.Struct):
    id: int = msgspec.field()
    serial_test: int = msgspec.field()
    serial4_test: int = msgspec.field()
    bigserial_test: int = msgspec.field()
    smallserial_test: int = msgspec.field()
    int_test: int = msgspec.field()
    bigint_test: int = msgspec.field()
    smallint_test: int = msgspec.field()
    float_test: float = msgspec.field()
    double_precision_test: float = msgspec.field()
    real_test: float = msgspec.field()
    numeric_test: decimal.Decimal = msgspec.field()
    money_test: str = msgspec.field()
    bool_test: bool = msgspec.field()
    json_test: str = msgspec.field()
    jsonb_test: str = msgspec.field()
    bytea_test: memoryview = msgspec.field()
    date_test: datetime.date = msgspec.field()
    time_test: datetime.time = msgspec.field()
    timetz_test: datetime.time = msgspec.field()
    timestamp_test: datetime.datetime = msgspec.field()
    timestamptz_test: datetime.datetime = msgspec.field()
    interval_test: datetime.timedelta = msgspec.field()
    text_test: str = msgspec.field()
    varchar_test: str = msgspec.field()
    bpchar_test: str = msgspec.field()
    char_test: str = msgspec.field()
    citext_test: str = msgspec.field()
    uuid_test: uuid.UUID = msgspec.field()
    inet_test: str = msgspec.field()
    cidr_test: str = msgspec.field()
    macaddr_test: str = msgspec.field()
    macaddr8_test: str = msgspec.field()
    ltree_test: str = msgspec.field()
    lquery_test: str = msgspec.field()
    ltxtquery_test: str = msgspec.field()


class TestScore(msgspec.Struct):
    student_id: typing.Optional[int] = msgspec.field()
    score: typing.Optional[int] = msgspec.field()
    grade: typing.Optional[str] = msgspec.field()
